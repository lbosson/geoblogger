# NOTE - DO NOT ADD YOUR CONFIG FILE TO YOUR GITHUB REPO IT CONTAINS PRIVATE INFO

##################################################
# BLOG
#
# There are two main ways to organize your local files. One, using directories...a top level
# directory and a subdirectory for each blog post. Two, a directory containing all your media
# and a second for all of your gpx files prefixed with the title of your blog post. The second
# may sound silly but it's convient if you are using a program like Lightroom to manage your
# media and you have hundreds of blog posts across a bigger trip.
##################################################
# The top level directory that will store sub folders for your image and gpx files
# e.g. myblogs/, myblogs/death_valley, myblogs/baja
#      subfolders will contain .jpgs, .mp4, .gpx and description.txt
#      (note: first line of description.txt will be the title of the blog)

blog_url: "http://<yourblog>.blogspot.com/"  # CHANGE THIS
blog_title: '<Your Awesome Blog>'  # CHANGE THIS

# Select "list" or "folder" methods.
#
# List method you store all your gpx files in a subfolder called "gpx", all your images in a
# subfolder called "images" and all your videos in a subfolder called "videos". The names of your
# files are prefixed with name of the gpx (which is also the name of the blog).
#
# Folder method you create a subfolder for each blog and add your gpx, images and videos to the
# top level of that folder. The name of the folder is the blog title.
blog_method: 'folder'  # or 'list'

blog_folder: ''  # Default to directory of this config file

prompt: True  # Set this to false if you do not want to be prompted to confirm changes

blog_tag: "Autoblog"  # This is used as the tag for the blog post
blog_hide_featured_image: False  # This is useful for templates with featured focused layouts like 690south.com
blog_featured_image_width: "500px"  # This will change with your template.
##################################################


##################################################
# MAPS
##################################################
# CHANGE THIS TO THE ID OF A PAGE THAT WILL BE OVERWRITTEN WITH THE INTERACTIVE MAP
interactive_map_page_id: ''  # CHANGE THIS - Create a page on your blog and add the ID here.
interactive_map_title: 'Track'
##################################################


##################################################
# KEYS
#
# Arguably the hardest part. You will need to setup a blogger account, a google developer
# account and an Amazon Web Services account. In addition you will need to create keys
# that allow this app to access various parts of your accounts.
##################################################
# S3
s3_access_id: ''  # CHANGE THIS
s3_secret: ''  # CHANGE THIS
s3_bucket: ''  # CHANGE THIS
s3_website_prefix: 'http://<yourbucket>.s3-website-<region>.amazonaws.com'  # CHANGE THIS

# Google
blogger_blog_id: ''  # CHANGE THIS
blogger_client_id: ''  # CHANGE THIS
blogger_secret: ''  # CHANGE THIS
google_maps_api_key: ''  # CHANGE THIS
##################################################


##################################################
# IMAGES
##################################################
image_gallery_page_id: ''  # CHANGE THIS - Create a page for the image gallery on your blog and add the ID here.
image_gallery_page_title: 'Gallery'
image_size_large: None  # None for full size untouched
image_size_medium: [640, 640]
image_size_small: [200, 200]
image_extensions: ['.jpeg', '.jpg', '.gif', '.png']  # Add your format here if it doesn't exist...I'm lazy.
image_default_post_display_size: 200  # Increase this when you go to a responsive template
##################################################


##################################################
# VIDEOS
##################################################
video_extensions: ['.mov', '.mp4', '.avi']  # Add your format here if it doesn't exist...I'm lazy.
##################################################


##################################################
# ADVANCED
#
# Only change these if you know what you are doing.
##################################################
database_dir: None
##################################################


##################################################
# LOGGING/DEBUGGING
##################################################
# One of DEBUG, INFO, WARN, ERROR
log_level: `ERROR`  # Set this to DEBUG and rerun if you are going to send me a support request, please.
log_to_screen: True
log_dir: ''  # Leave blank to log to a temp directory
log_fmt: '%(asctime)s.%(msecs)d - %(process)d:%(thread)d - %(name)s - %(levelname)s - %(filename)s:%(lineno)d - %(message)s'
log_datefmt: '%Y-%m-%dT%H:%M:%S'
redirect_std: False
##################################################


##################################################
# FOLDER BACKUP
##################################################
# This is just a little extra thing that may be usefull. The same filewatcher
# for tracking changes in your blog can be used to sync folders. This doesn't make
# dated copies. It doesn't track changes. It simply makes one folder look like another.
# I found this useful to backup lightroom because it's huge so it takes up too much space,
# takes too long and is too combersome to deal with a copy per backup.
#
# Format is a list of tuples like: [path_to_source_dir, path_to_backup_dir, [skip_list]]
#
# Note: skip_list is a regex
folders_to_backup: [
    #["/path/to/lightroom/folder", "/Volumes/backup_drive/lightroom_backup", [".*\\.lrdata.*"]],  # Example
]
